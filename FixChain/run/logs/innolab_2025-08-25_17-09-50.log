2025-08-25 17:09:50,533 - innolab - INFO - ExecutionServiceNoMongo initialized with:
2025-08-25 17:09:50,533 - innolab - INFO -   Max iterations: 5
2025-08-25 17:09:50,533 - innolab - INFO -   Project key: my-service
2025-08-25 17:09:50,534 - innolab - INFO -   Source code path: d:\InnoLab\projects
2025-08-25 17:09:50,534 - innolab - INFO -   Scan directory: SonarQ
2025-08-25 17:09:50,534 - innolab - INFO -   Scan mode: ['bearer']
2025-08-25 17:09:50,535 - innolab - INFO -   Fix mode: ['llm']
2025-08-25 17:09:50,535 - innolab - INFO -   RAG available: True
2025-08-25 17:09:50,535 - innolab - INFO - Starting execution without RAG (mode: DifyMode.CLOUD)
2025-08-25 17:09:50,535 - innolab - INFO - 
=== ITERATION 1/5 ===
2025-08-25 17:09:50,538 - innolab - INFO - Starting Bearer scan for project: my-service
2025-08-25 17:09:50,538 - innolab - INFO - Removed existing Bearer results file: d:\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-25 17:09:50,538 - innolab - INFO - Scanning directory: d:\InnoLab\projects\SonarQ
2025-08-25 17:09:50,540 - innolab - ERROR - Command not found: bearer
2025-08-25 17:09:50,540 - innolab - INFO - Using Bearer Docker image
2025-08-25 17:09:50,541 - innolab - INFO - Running Bearer Docker scan: docker run --rm -v d:\InnoLab\projects\SonarQ:/scan -v d:\InnoLab\projects\SonarQ\bearer_results:/output bearer/bearer:latest scan /scan --format json --output /output/bearer_results_my-service.json --quiet
2025-08-25 17:09:51,626 - innolab - INFO - Analyzing codebase
2025-08-25 17:09:57,754 - innolab - ERROR - Command failed with return code 1
2025-08-25 17:09:57,755 - innolab - INFO - Bearer Docker scan completed successfully
2025-08-25 17:09:57,755 - innolab - INFO - Reading Bearer scan results from: d:\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-25 17:09:57,756 - innolab - INFO - Bearer scan results loaded successfully
2025-08-25 17:09:57,757 - innolab - INFO - Found 12 Bearer security issues
2025-08-25 17:09:57,757 - innolab - INFO - BEARER scanner found 12 bugs
2025-08-25 17:09:57,758 - innolab - INFO - Iteration 1: Found 12 open bugs (0 BUG, 0 CODE_SMELL) across scanners: BEARER
2025-08-25 17:09:57,758 - innolab - INFO - Need to fix 12 bugs using Dify
2025-08-25 17:09:57,759 - innolab - INFO - Running workflow with Dify API: app-6bGJaqyHPDlgGWYCqEl8OIw2
2025-08-25 17:09:57,759 - innolab - INFO - User: hieult
2025-08-25 17:09:57,759 - innolab - INFO - Mode: DifyMode.CLOUD
2025-08-25 17:09:57,759 - innolab - INFO - Base URL: https://api.dify.ai/v1
2025-08-25 17:09:57,760 - innolab - INFO - Generating Dify headers for api_key: app-6b...
2025-08-25 17:09:57,760 - innolab - INFO - POST https://api.dify.ai/v1/workflows/run with payload: {'inputs': {'is_use_rag': 'False', 'report': '[{"key": "bearer_python_lang_avoid_pickle_dacfec7a132bf64e199a6d2ad0d36a87_0", "rule": "python_lang_avoid_pickle", "severity": "BLOCKER", "component": "appy.py", "line": 14, "message": "Usage of unsafe Pickle libraries. ## Description\\n\\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-502"], "creationDate": "2025-08-25T17:09:57.756978", "updateDate": "2025-08-25T17:09:57.756985", "textRange": {"startLine": 14, "endLine": 14, "startOffset": 12, "endOffset": 30}}, {"key": "bearer_python_lang_avoid_pickle_8a3f570abd0595ba27fadad58e40d4de_0", "rule": "python_lang_avoid_pickle", "severity": "BLOCKER", "component": "demo_project/vulnerable_app.py", "line": 14, "message": "Usage of unsafe Pickle libraries. ## Description\\n\\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-502"], "creationDate": "2025-08-25T17:09:57.757036", "updateDate": "2025-08-25T17:09:57.757043", "textRange": {"startLine": 14, "endLine": 14, "startOffset": 12, "endOffset": 30}}, {"key": "bearer_python_lang_eval_using_user_input_d5dfedc4d51dc215b12ad26255354d7a_0", "rule": "python_lang_eval_using_user_input", "severity": "BLOCKER", "component": "appy.py", "line": 40, "message": "Unsanitized user input in \'eval\' type function. ## Description\\n\\nExecuting code with \'eval\' or similar functions using unsanitized user input is risky and can lead to code injection vulnerabilities. This happens when external input is used directly ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-95"], "creationDate": "2025-08-25T17:09:57.757088", "updateDate": "2025-08-25T17:09:57.757089", "textRange": {"startLine": 40, "endLine": 40, "startOffset": 12, "endOffset": 27}}, {"key": "bearer_python_lang_eval_using_user_input_89fb7a20be51b823e5fa1b1ca51d0e75_0", "rule": "python_lang_eval_using_user_input", "severity": "BLOCKER", "component": "demo_project/vulnerable_app.py", "line": 40, "message": "Unsanitized user input in \'eval\' type function. ## Description\\n\\nExecuting code with \'eval\' or similar functions using unsanitized user input is risky and can lead to code injection vulnerabilities. This happens when external input is used directly ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-95"], "creationDate": "2025-08-25T17:09:57.757186", "updateDate": "2025-08-25T17:09:57.757191", "textRange": {"startLine": 40, "endLine": 40, "startOffset": 12, "endOffset": 27}}, {"key": "bearer_python_lang_os_command_injection_c3ac133355ff26f071b13c04a906e74b_0", "rule": "python_lang_os_command_injection", "severity": "BLOCKER", "component": "appy.py", "line": 27, "message": "Unsanitized user input in OS command. ## Description\\n\\nDirectly incorporating external or user-defined input into an OS command exposes the system to possible command injection attacks. This vulnerability allows attackers to execute unauth...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-78"], "creationDate": "2025-08-25T17:09:57.757272", "updateDate": "2025-08-25T17:09:57.757277", "textRange": {"startLine": 27, "endLine": 27, "startOffset": 12, "endOffset": 44}}, {"key": "bearer_python_lang_os_command_injection_d77d86641ec1dbcbbbc996aa1ae1b2fe_0", "rule": "python_lang_os_command_injection", "severity": "BLOCKER", "component": "demo_project/vulnerable_app.py", "line": 27, "message": "Unsanitized user input in OS command. ## Description\\n\\nDirectly incorporating external or user-defined input into an OS command exposes the system to possible command injection attacks. This vulnerability allows attackers to execute unauth...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-78"], "creationDate": "2025-08-25T17:09:57.757302", "updateDate": "2025-08-25T17:09:57.757303", "textRange": {"startLine": 27, "endLine": 27, "startOffset": 12, "endOffset": 44}}, {"key": "bearer_python_lang_sql_injection_1b437faf8d51b69f624d934987bfd5a2_0", "rule": "python_lang_sql_injection", "severity": "BLOCKER", "component": "appy.py", "line": 21, "message": "Unsanitized external input in SQL query. ## Description\\n\\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vul...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-89"], "creationDate": "2025-08-25T17:09:57.757328", "updateDate": "2025-08-25T17:09:57.757329", "textRange": {"startLine": 21, "endLine": 21, "startOffset": 5, "endOffset": 26}}, {"key": "bearer_python_lang_sql_injection_e400e73bc1e8e647404e1fb7e9199492_0", "rule": "python_lang_sql_injection", "severity": "BLOCKER", "component": "demo_project/vulnerable_app.py", "line": 21, "message": "Unsanitized external input in SQL query. ## Description\\n\\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vul...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-89"], "creationDate": "2025-08-25T17:09:57.757349", "updateDate": "2025-08-25T17:09:57.757350", "textRange": {"startLine": 21, "endLine": 21, "startOffset": 5, "endOffset": 26}}, {"key": "bearer_python_lang_path_traversal_1d58064e45168acf7b89c9cd00995c69_0", "rule": "python_lang_path_traversal", "severity": "CRITICAL", "component": "appy.py", "line": 35, "message": "Unsanitized dynamic input in file path. ## Description\\n\\nUsing unsanitized dynamic input to determine file paths can allow attackers to gain access to files and folders outside of the intended scope. This vulnerability occurs when input prov...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "security", "medium", "cwe-22"], "creationDate": "2025-08-25T17:09:57.757370", "updateDate": "2025-08-25T17:09:57.757371", "textRange": {"startLine": 35, "endLine": 35, "startOffset": 10, "endOffset": 43}}, {"key": "bearer_python_lang_path_traversal_d635f3835fef469326612802fe0c81ee_0", "rule": "python_lang_path_traversal", "severity": "CRITICAL", "component": "demo_project/vulnerable_app.py", "line": 35, "message": "Unsanitized dynamic input in file path. ## Description\\n\\nUsing unsanitized dynamic input to determine file paths can allow attackers to gain access to files and folders outside of the intended scope. This vulnerability occurs when input prov...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "security", "medium", "cwe-22"], "creationDate": "2025-08-25T17:09:57.757387", "updateDate": "2025-08-25T17:09:57.757388", "textRange": {"startLine": 35, "endLine": 35, "startOffset": 10, "endOffset": 43}}, {"key": "bearer_python_lang_weak_hash_md5_403b9d8f405ebbdf90685e618477f370_0", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "appy.py", "line": 31, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-25T17:09:57.757407", "updateDate": "2025-08-25T17:09:57.757408", "textRange": {"startLine": 31, "endLine": 31, "startOffset": 12, "endOffset": 42}}, {"key": "bearer_python_lang_weak_hash_md5_9c5dd39a018527fad89f6c0d4b7b6d93_0", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "demo_project/vulnerable_app.py", "line": 31, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-25T17:09:57.757421", "updateDate": "2025-08-25T17:09:57.757422", "textRange": {"startLine": 31, "endLine": 31, "startOffset": 12, "endOffset": 42}}]'}, 'user': 'hieult', 'response_mode': 'blocking'}
2025-08-25 17:09:58,427 - innolab - INFO - Dify workflow run response status: 400
2025-08-25 17:09:58,428 - innolab - INFO - Dify workflow run response: {"code": "invalid_param", "message": "src is required in input form", "status": 400}

2025-08-25 17:09:58,428 - innolab - ERROR - Failed to run workflow via Dify: 400 Client Error: BAD REQUEST for url: https://api.dify.ai/v1/workflows/run
2025-08-25 17:09:58,428 - innolab - ERROR - DIFY:Error in analysis_bugs_with_dify: 400 Client Error: BAD REQUEST for url: https://api.dify.ai/v1/workflows/run
2025-08-25 17:09:58,429 - innolab - INFO - No real bugs to fix after analysis
2025-08-25 17:09:58,430 - innolab - INFO - === EXECUTION RESULT ===
2025-08-25 17:09:58,430 - innolab - INFO - Mode: CLOUD
2025-08-25 17:09:58,430 - innolab - INFO - Project: my-service
2025-08-25 17:09:58,430 - innolab - INFO - Total bugs fixed: 0
2025-08-25 17:09:58,431 - innolab - INFO - Total iterations: 1
2025-08-25 17:09:58,431 - innolab - INFO - Start time: 2025-08-25T17:09:50.535811
2025-08-25 17:09:58,431 - innolab - INFO - End time: 2025-08-25T17:09:58.429986
2025-08-25 17:09:58,431 - innolab - INFO - Iteration 1: 12 bugs found, 0 fixed
