2025-08-25 14:00:51,215 - innolab - INFO - ExecutionServiceNoMongo initialized with:
2025-08-25 14:00:51,215 - innolab - INFO -   Max iterations: 5
2025-08-25 14:00:51,215 - innolab - INFO -   Project key: my-service
2025-08-25 14:00:51,216 - innolab - INFO -   Source code path: d:\InnoLab\SonarQ\source_bug
2025-08-25 14:00:51,216 - innolab - INFO -   Scan directory: source_bug
2025-08-25 14:00:51,216 - innolab - INFO -   Scan mode: bearer
2025-08-25 14:00:51,216 - innolab - INFO -   RAG available: True
2025-08-25 14:00:51,216 - innolab - INFO - Starting execution without RAG (mode: DifyMode.CLOUD)
2025-08-25 14:00:51,216 - innolab - INFO - 
=== ITERATION 1/5 ===
2025-08-25 14:00:51,217 - innolab - INFO - Loading Bearer scan results for project: my-service
2025-08-25 14:00:51,217 - innolab - INFO - Reading Bearer scan results from: d:\InnoLab\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-25 14:00:51,217 - innolab - INFO - Bearer scan results loaded successfully
2025-08-25 14:00:51,218 - innolab - INFO - Converted 3 Bearer findings to compatible format
2025-08-25 14:00:51,218 - innolab - INFO - Found 3 Bearer security issues
2025-08-25 14:00:51,218 - innolab - INFO - Iteration 1: Found 3 open bugs (0 BUG, 0 CODE_SMELL) in BEARER scan
2025-08-25 14:00:51,218 - innolab - INFO - Need to fix 3 bugs using Dify
2025-08-25 14:00:51,219 - innolab - INFO - Running workflow with Dify API: app-6bGJaqyHPDlgGWYCqEl8OIw2
2025-08-25 14:00:51,219 - innolab - INFO - User: hieult
2025-08-25 14:00:51,219 - innolab - INFO - Mode: DifyMode.CLOUD
2025-08-25 14:00:51,219 - innolab - INFO - Base URL: https://api.dify.ai/v1
2025-08-25 14:00:51,219 - innolab - INFO - Generating Dify headers for api_key: app-6b...
2025-08-25 14:00:51,219 - innolab - INFO - POST https://api.dify.ai/v1/workflows/run with payload: {'inputs': {'is_use_rag': 'False', 'report': '[{"key": "bearer_python_lang_avoid_pickle_dacfec7a132bf64e199a6d2ad0d36a87_0", "rule": "python_lang_avoid_pickle", "severity": "BLOCKER", "component": "appy.py", "line": 48, "message": "Usage of unsafe Pickle libraries. ## Description\\n\\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "cwe-502"], "creationDate": "2025-08-25T14:00:51.218007", "updateDate": "2025-08-25T14:00:51.218013", "textRange": {"startLine": 48, "endLine": 48, "startOffset": 11, "endOffset": 29}, "scanner": "bearer", "bearer_severity": "critical", "cwe_ids": ["502"], "documentation_url": "https://docs.bearer.com/reference/rules/python_lang_avoid_pickle", "code_extract": "    obj = pickle.loads(data)  # vulnerable"}, {"key": "bearer_python_lang_ssl_verification_d44c2edc9454db162c25339b54563d42_0", "rule": "python_lang_ssl_verification", "severity": "CRITICAL", "component": "appy.py", "line": 64, "message": "Missing SSL certificate verification. ## Description\\n\\nMissing or optional SSL certificate verification can compromise the security of sensitive data. This vulnerability arises when an application fails to check for valid SSL certificates ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "cwe-295"], "creationDate": "2025-08-25T14:00:51.218052", "updateDate": "2025-08-25T14:00:51.218053", "textRange": {"startLine": 64, "endLine": 64, "startOffset": 9, "endOffset": 40}, "scanner": "bearer", "bearer_severity": "high", "cwe_ids": ["295"], "documentation_url": "https://docs.bearer.com/reference/rules/python_lang_ssl_verification", "code_extract": "    r = requests.get(url, verify=False)"}, {"key": "bearer_python_lang_weak_hash_md5_403b9d8f405ebbdf90685e618477f370_0", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "appy.py", "line": 55, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "cwe-328"], "creationDate": "2025-08-25T14:00:51.218078", "updateDate": "2025-08-25T14:00:51.218080", "textRange": {"startLine": 55, "endLine": 55, "startOffset": 9, "endOffset": 39}, "scanner": "bearer", "bearer_severity": "medium", "cwe_ids": ["328"], "documentation_url": "https://docs.bearer.com/reference/rules/python_lang_weak_hash_md5", "code_extract": "    h = hashlib.md5(password.encode()).hexdigest()"}]'}, 'user': 'hieult', 'response_mode': 'blocking'}
2025-08-25 14:00:52,127 - innolab - INFO - Dify workflow run response status: 400
2025-08-25 14:00:52,127 - innolab - INFO - Dify workflow run response: {"code": "invalid_param", "message": "src is required in input form", "status": 400}

2025-08-25 14:00:52,128 - innolab - ERROR - Failed to run workflow via Dify: 400 Client Error: BAD REQUEST for url: https://api.dify.ai/v1/workflows/run
2025-08-25 14:00:52,128 - innolab - ERROR - DIFY:Error in fix_bugs_with_dify: 400 Client Error: BAD REQUEST for url: https://api.dify.ai/v1/workflows/run
2025-08-25 14:00:52,129 - innolab - ERROR - Demo failed: cannot access local variable 'list_bugs' where it is not associated with a value
