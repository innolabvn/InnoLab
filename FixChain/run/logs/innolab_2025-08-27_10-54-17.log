2025-08-27 10:54:17,695 - innolab - INFO - ExecutionServiceNoMongo initialized with:
2025-08-27 10:54:17,696 - innolab - INFO -   Max iterations: 5
2025-08-27 10:54:17,696 - innolab - INFO -   Project key: my-service
2025-08-27 10:54:17,696 - innolab - INFO -   Source code path: c:\Users\HieuLT\Desktop\InnoLab\projects
2025-08-27 10:54:17,696 - innolab - INFO -   Scan directory: Flask_App
2025-08-27 10:54:17,696 - innolab - INFO -   Scan mode: ['bearer']
2025-08-27 10:54:17,696 - innolab - INFO -   Fix mode: ['llm']
2025-08-27 10:54:17,696 - innolab - INFO -   RAG available: True
2025-08-27 10:54:17,699 - innolab - INFO - Starting execution without RAG (mode: DifyMode.LOCAL)
2025-08-27 10:54:17,699 - innolab - INFO - 
=== ITERATION 1/5 ===
2025-08-27 10:54:17,699 - innolab - INFO - Starting Bearer scan for project: my-service
2025-08-27 10:54:17,699 - innolab - INFO - Removed existing Bearer results file: c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-27 10:54:17,700 - innolab - INFO - Scanning directory: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:54:17,701 - innolab - ERROR - Command not found: bearer
2025-08-27 10:54:17,701 - innolab - INFO - Using Bearer Docker image
2025-08-27 10:54:17,701 - innolab - INFO - Running Bearer Docker scan: docker run --rm -v c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App:/scan -v c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results:/output bearer/bearer:latest scan /scan --format json --output /output/bearer_results_my-service.json --quiet --skip-path node_modules,*.git,__pycache__,.venv,venv,dist,build
2025-08-27 10:54:18,793 - innolab - INFO - Analyzing codebase
2025-08-27 10:54:25,542 - innolab - ERROR - Command failed with return code 1
2025-08-27 10:54:25,543 - innolab - INFO - Bearer Docker scan completed successfully
2025-08-27 10:54:25,544 - innolab - INFO - Reading Bearer scan results from: c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-27 10:54:25,545 - innolab - INFO - Bearer scan results loaded successfully
2025-08-27 10:54:25,545 - innolab - INFO - Found 5 Bearer security issues
2025-08-27 10:54:25,546 - innolab - INFO - BEARER scanner found 5 bugs
2025-08-27 10:54:25,546 - innolab - INFO - Iteration 1: Found 5 open bugs (0 BUG, 0 CODE_SMELL) across scanners: BEARER
2025-08-27 10:54:25,547 - innolab - ERROR - Scan directory not found: C:\Users\HieuLT\Desktop\InnoLab\Flask_App
2025-08-27 10:54:25,547 - innolab - INFO - Need to fix 5 bugs using Dify
2025-08-27 10:54:25,548 - innolab - INFO - Running workflow with Dify API: app-21rA0wUAaR7PKPdmCX2WJxMo
2025-08-27 10:54:25,548 - innolab - INFO - User: hieult
2025-08-27 10:54:25,549 - innolab - INFO - Mode: DifyMode.LOCAL
2025-08-27 10:54:25,549 - innolab - INFO - Base URL: http://localhost:5001/v1
2025-08-27 10:54:25,550 - innolab - INFO - Generating Dify headers for api_key: app-21...
2025-08-27 10:54:25,550 - innolab - INFO - POST http://localhost:5001/v1/workflows/run with payload: {'inputs': {'is_use_rag': 'False', 'src': '', 'report': '[{"key": "bearer_python_lang_avoid_pickle_3d8bc9945ac20db0da36e3db83cdb41a_0", "rule": "python_lang_avoid_pickle", "severity": "BLOCKER", "component": "owasp_insecure_demo.py", "line": 167, "message": "Usage of unsafe Pickle libraries. ## Description\\n\\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-502"], "creationDate": "2025-08-27T10:54:25.545571", "updateDate": "2025-08-27T10:54:25.545581", "textRange": {"startLine": 167, "endLine": 167, "startOffset": 15, "endOffset": 33}}, {"key": "bearer_python_lang_ssl_verification_75c7b3a22c569565d6a6ddca3576a54f_0", "rule": "python_lang_ssl_verification", "severity": "CRITICAL", "component": "owasp_insecure_demo.py", "line": 179, "message": "Missing SSL certificate verification. ## Description\\n\\nMissing or optional SSL certificate verification can compromise the security of sensitive data. This vulnerability arises when an application fails to check for valid SSL certificates ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "security", "medium", "cwe-295"], "creationDate": "2025-08-27T10:54:25.545646", "updateDate": "2025-08-27T10:54:25.545648", "textRange": {"startLine": 179, "endLine": 179, "startOffset": 13, "endOffset": 55}}, {"key": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_0", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "owasp_insecure_demo.py", "line": 41, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-27T10:54:25.545692", "updateDate": "2025-08-27T10:54:25.545694", "textRange": {"startLine": 41, "endLine": 41, "startOffset": 18, "endOffset": 42}}, {"key": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_1", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "owasp_insecure_demo.py", "line": 74, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-27T10:54:25.545722", "updateDate": "2025-08-27T10:54:25.545724", "textRange": {"startLine": 74, "endLine": 74, "startOffset": 14, "endOffset": 44}}, {"key": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_2", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "owasp_insecure_demo.py", "line": 90, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-27T10:54:25.545755", "updateDate": "2025-08-27T10:54:25.545757", "textRange": {"startLine": 90, "endLine": 90, "startOffset": 14, "endOffset": 44}}]'}, 'user': 'hieult', 'response_mode': 'blocking'}
2025-08-27 10:54:31,891 - innolab - INFO - Dify workflow run response status: 200
2025-08-27 10:54:31,891 - innolab - INFO - Dify workflow run response: {"task_id": "930cae76-2131-4246-a077-1647f7d8aa33", "workflow_run_id": "1ba03127-2ec0-4562-ab12-1bf56a40fc22", "data": {"id": "1ba03127-2ec0-4562-ab12-1bf56a40fc22", "workflow_id": "1ab32356-d6d5-4b3b-924e-5a66bb39ab5b", "status": "succeeded", "outputs": {"list_bugs": {"bugs": [{"action": "Fix", "bug_id": "bearer_python_lang_avoid_pickle_3d8bc9945ac20db0da36e3db83cdb41a_0", "classification": "True Positive", "reason": "The issue is a vulnerability related to the usage of unsafe Pickle libraries. This can lead to arbitrary code execution, so it's a true positive.", "rule_description": "Usage of unsafe Pickle libraries. ## Description\n\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...", "rule_key": "python_lang_avoid_pickle", "type": "vulnerability"}, {"action": "Fix", "bug_id": "bearer_python_lang_ssl_verification_75c7b3a22c569565d6a6ddca3576a54f_0", "classification": "True Positive", "reason": "The issue is a vulnerability due to missing SSL certificate verification, which can compromise sensitive data. Therefore, it's a true positive.", "rule_description": "Missing SSL certificate verification. ## Description\n\nMissing or optional SSL certificate verification can compromise the security of sensitive data. This vulnerability arises when an application fails to check for valid SSL certificates ...", "rule_key": "python_lang_ssl_verification", "type": "vulnerability"}, {"action": "Fix", "bug_id": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_0", "classification": "True Positive", "reason": "The issue is a vulnerability because it uses the weak hashing library MD5, which is susceptible to collision attacks. Thus, it's a true positive.", "rule_description": "Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "rule_key": "python_lang_weak_hash_md5", "type": "vulnerability"}, {"action": "Fix", "bug_id": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_1", "classification": "True Positive", "reason": "The issue is a vulnerability because it uses the weak hashing library MD5, which is susceptible to collision attacks. Thus, it's a true positive.", "rule_description": "Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "rule_key": "python_lang_weak_hash_md5", "type": "vulnerability"}, {"action": "Fix", "bug_id": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_2", "classification": "True Positive", "reason": "The issue is a vulnerability because it uses the weak hashing library MD5, which is susceptible to collision attacks. Thus, it's a true positive.", "rule_description": "Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "rule_key": "python_lang_weak_hash_md5", "type": "vulnerability"}], "bugs_to_fix": 5.0}, "bugs_to_fix": "{\n  \"bugs\": [\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_avoid_pickle_3d8bc9945ac20db0da36e3db83cdb41a_0\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The issue is a vulnerability related to the usage of unsafe Pickle libraries. This can lead to arbitrary code execution, so it's a true positive.\",\n      \"rule_description\": \"Usage of unsafe Pickle libraries. ## Description\\n\\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...\",\n      \"rule_key\": \"python_lang_avoid_pickle\",\n      \"type\": \"vulnerability\"\n    },\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_ssl_verification_75c7b3a22c569565d6a6ddca3576a54f_0\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The issue is a vulnerability due to missing SSL certificate verification, which can compromise sensitive data. Therefore, it's a true positive.\",\n      \"rule_description\": \"Missing SSL certificate verification. ## Description\\n\\nMissing or optional SSL certificate verification can compromise the security of sensitive data. This vulnerability arises when an application fails to check for valid SSL certificates ...\",\n      \"rule_key\": \"python_lang_ssl_verification\",\n      \"type\": \"vulnerability\"\n    },\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_0\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The issue is a vulnerability because it uses the weak hashing library MD5, which is susceptible to collision attacks. Thus, it's a true positive.\",\n      \"rule_description\": \"Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...\",\n      \"rule_key\": \"python_lang_weak_hash_md5\",\n      \"type\": \"vulnerability\"\n    },\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_1\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The issue is a vulnerability because it uses the weak hashing library MD5, which is susceptible to collision attacks. Thus, it's a true positive.\",\n      \"rule_description\": \"Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...\",\n      \"rule_key\": \"python_lang_weak_hash_md5\",\n      \"type\": \"vulnerability\"\n    },\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_2\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The issue is a vulnerability because it uses the weak hashing library MD5, which is susceptible to collision attacks. Thus, it's a true positive.\",\n      \"rule_description\": \"Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...\",\n      \"rule_key\": \"python_lang_weak_hash_md5\",\n      \"type\": \"vulnerability\"\n    }\n  ],\n  \"bugs_to_fix\": 5.0\n}"}, "error": "", "elapsed_time": 6.259052, "total_tokens": 4796, "total_steps": 4, "created_at": 1756266865, "finished_at": 1756266871}}
2025-08-27 10:54:31,892 - innolab - INFO - DIFY: list_bugs type: <class 'dict'>, content: {'bugs': [{'action': 'Fix', 'bug_id': 'bearer_python_lang_avoid_pickle_3d8bc9945ac20db0da36e3db83cdb41a_0', 'classification': 'True Positive', 'reason': "The issue is a vulnerability related to the usage of unsafe Pickle libraries. This can lead to arbitrary code execution, so it's a true positive.", 'rule_description': 'Usage of unsafe Pickle libraries. ## Description\n\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...', 'rule_key': 'python_lang_avoid_pickle', 'type': 'vulnerability'}, {'action': 'Fix', 'bug_id': 'bearer_python_lang_ssl_verification_75c7b3a22c569565d6a6ddca3576a54f_0', 'classification': 'True Positive', 'reason': "The issue is a vulnerability due to missing SSL certificate verification, which can compromise sensitive data. Therefore, it's a true positive.", 'rule_description': 'Missing SSL certificate verification. ## Description\n\nMissing or optional SSL certificate verification can compromise the security of sensitive data. This vulnerability arises when an application fails to check for valid SSL certificates ...', 'rule_key': 'python_lang_ssl_verification', 'type': 'vulnerability'}, {'action': 'Fix', 'bug_id': 'bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_0', 'classification': 'True Positive', 'reason': "The issue is a vulnerability because it uses the weak hashing library MD5, which is susceptible to collision attacks. Thus, it's a true positive.", 'rule_description': 'Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...', 'rule_key': 'python_lang_weak_hash_md5', 'type': 'vulnerability'}, {'action': 'Fix', 'bug_id': 'bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_1', 'classification': 'True Positive', 'reason': "The issue is a vulnerability because it uses the weak hashing library MD5, which is susceptible to collision attacks. Thus, it's a true positive.", 'rule_description': 'Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...', 'rule_key': 'python_lang_weak_hash_md5', 'type': 'vulnerability'}, {'action': 'Fix', 'bug_id': 'bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_2', 'classification': 'True Positive', 'reason': "The issue is a vulnerability because it uses the weak hashing library MD5, which is susceptible to collision attacks. Thus, it's a true positive.", 'rule_description': 'Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...', 'rule_key': 'python_lang_weak_hash_md5', 'type': 'vulnerability'}], 'bugs_to_fix': 5.0}
2025-08-27 10:54:31,893 - innolab - INFO - DIFY: Initial bugs_to_fix from response: 5
2025-08-27 10:54:31,893 - innolab - INFO - Starting fix_bugs for 2 bugs
2025-08-27 10:54:31,894 - innolab - INFO - DEBUG: scan_directory = Flask_App
2025-08-27 10:54:31,894 - innolab - INFO - DEBUG: innolab_root = c:\Users\HieuLT\Desktop\InnoLab\projects
2025-08-27 10:54:31,894 - innolab - INFO - DEBUG: source_dir = c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:54:31,895 - innolab - INFO - Fixing bugs in directory: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:54:31,896 - innolab - INFO - Created issues file: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App\list_real_bugs.json with 2 bugs
2025-08-27 10:54:31,896 - innolab - INFO - Running command: python C:\Users\HieuLT\Desktop\InnoLab\SonarQ\batch_fix.py c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App --fix --auto --issues-file list_real_bugs.json
2025-08-27 10:55:08,724 - innolab - INFO - Enhanced Secure Batch Fix Script
2025-08-27 10:55:08,724 - innolab - INFO - Advanced AI-powered code fixing with validation & safety checks
2025-08-27 10:55:08,725 - innolab - INFO - ======================================================================
2025-08-27 10:55:08,725 - innolab - INFO - FIXING Mode Enabled
2025-08-27 10:55:08,725 - innolab - INFO - Fixing files in-place (overwriting originals)
2025-08-27 10:55:08,725 - innolab - INFO - Issues file not found: list_real_bugs.json
2025-08-27 10:55:08,725 - innolab - INFO - Template usage logging enabled: ./logs\template_usage_20250827_105433.log
2025-08-27 10:55:08,725 - innolab - INFO - Scan Results:
2025-08-27 10:55:08,726 - innolab - INFO - Directory: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:55:08,726 - innolab - INFO - Found 1 code files
2025-08-27 10:55:08,726 - innolab - INFO - Files to process:
2025-08-27 10:55:08,726 - innolab - INFO - 1. owasp_insecure_demo.py
2025-08-27 10:55:08,727 - innolab - INFO - Auto mode: proceeding without confirmation
2025-08-27 10:55:08,727 - innolab - INFO - ======================================================================
2025-08-27 10:55:08,727 - innolab - INFO - Starting secure fixing...
2025-08-27 10:55:08,727 - innolab - INFO - Template usage logging enabled: ./logs\template_usage_20250827_105433.log
2025-08-27 10:55:08,728 - innolab - INFO - [1/1] Fixing: owasp_insecure_demo.py
2025-08-27 10:55:08,728 - innolab - INFO - Success (35.4s)
2025-08-27 10:55:08,728 - innolab - INFO - Changes: Size change: -584 bytes; Similarity: 56.3%
2025-08-27 10:55:08,728 - innolab - INFO - ======================================================================
2025-08-27 10:55:08,729 - innolab - INFO - BATCH_FIX_RESULT: SUCCESS
2025-08-27 10:55:08,729 - innolab - INFO - FIXED_FILES: 1
2025-08-27 10:55:08,729 - innolab - INFO - FAILED_FILES: 0
2025-08-27 10:55:08,729 - innolab - INFO - TOTAL_INPUT_TOKENS: 3072
2025-08-27 10:55:08,730 - innolab - INFO - TOTAL_OUTPUT_TOKENS: 6699
2025-08-27 10:55:08,730 - innolab - INFO - TOTAL_TOKENS: 9771
2025-08-27 10:55:08,730 - innolab - INFO - AVERAGE_SIMILARITY: 0.563
2025-08-27 10:55:08,730 - innolab - INFO - THRESHOLD_MET_COUNT: 0
2025-08-27 10:55:08,731 - innolab - INFO - SIMILARITY_THRESHOLD: 0.85
2025-08-27 10:55:08,731 - innolab - INFO - DETAILED_RESULTS:
2025-08-27 10:55:08,731 - innolab - INFO - FILE: owasp_insecure_demo.py | STATUS: SUCCESS | SIMILARITY: 0.563 | INPUT_TOKENS: 3072 | OUTPUT_TOKENS: 6699 | TOTAL_TOKENS: 9771 | THRESHOLD_MET: False
2025-08-27 10:55:08,731 - innolab - INFO - AVERAGE_PROCESSING_TIME: 35.4
2025-08-27 10:55:08,732 - innolab - INFO - END_BATCH_RESULT
2025-08-27 10:55:08,732 - innolab - INFO - {"success": true, "fixed_count": 1, "failed_count": 0, "total_input_tokens": 3072, "total_output_tokens": 6699, "total_tokens": 9771, "average_similarity": 0.5629388816644993, "threshold_met_count": 0, "similarity_threshold": 0.85, "average_processing_time": 35.350194}
2025-08-27 10:55:10,912 - innolab - INFO - Batch fix completed successfully. Fixed 1 files
2025-08-27 10:55:10,912 - innolab - INFO - Token usage - Input: 3072, Output: 6699, Total: 9771
2025-08-27 10:55:10,913 - innolab - INFO - Average similarity: 0.563, Threshold met: 0
2025-08-27 10:55:10,913 - innolab - INFO - Cleaned up temporary issues file: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App\list_real_bugs.json
2025-08-27 10:55:10,914 - innolab - INFO - Starting Bearer scan for project: my-service
2025-08-27 10:55:10,914 - innolab - INFO - Removed existing Bearer results file: c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-27 10:55:10,914 - innolab - INFO - Scanning directory: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:55:10,916 - innolab - ERROR - Command not found: bearer
2025-08-27 10:55:10,916 - innolab - INFO - Using Bearer Docker image
2025-08-27 10:55:10,917 - innolab - INFO - Running Bearer Docker scan: docker run --rm -v c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App:/scan -v c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results:/output bearer/bearer:latest scan /scan --format json --output /output/bearer_results_my-service.json --quiet --skip-path node_modules,*.git,__pycache__,.venv,venv,dist,build
2025-08-27 10:55:11,928 - innolab - INFO - Analyzing codebase
2025-08-27 10:55:18,169 - innolab - INFO - Bearer Docker scan completed successfully
2025-08-27 10:55:18,169 - innolab - INFO - Reading Bearer scan results from: c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-27 10:55:18,170 - innolab - INFO - Bearer scan results loaded successfully
2025-08-27 10:55:18,170 - innolab - INFO - Found 0 Bearer security issues
2025-08-27 10:55:18,170 - innolab - INFO - Rescan found 0 open bugs (0 BUG, 0 CODE_SMELL)
2025-08-27 10:55:18,171 - innolab - INFO - Bugs reduced: 5 (from 5 to 0)
2025-08-27 10:55:18,171 - innolab - INFO - Iteration 1 completed: all bugs resolved after rescan
2025-08-27 10:55:18,171 - innolab - INFO - === EXECUTION RESULT ===
2025-08-27 10:55:18,171 - innolab - INFO - Mode: LOCAL
2025-08-27 10:55:18,171 - innolab - INFO - Project: my-service
2025-08-27 10:55:18,172 - innolab - INFO - Total bugs fixed: 1
2025-08-27 10:55:18,172 - innolab - INFO - Total iterations: 1
2025-08-27 10:55:18,172 - innolab - INFO - Start time: 2025-08-27T10:54:17.699038
2025-08-27 10:55:18,172 - innolab - INFO - End time: 2025-08-27T10:55:18.171552
2025-08-27 10:55:18,172 - innolab - INFO - Iteration 1: 5 bugs found, 1 fixed
