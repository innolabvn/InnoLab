2025-08-25 17:11:49,062 - innolab - INFO - ExecutionServiceNoMongo initialized with:
2025-08-25 17:11:49,062 - innolab - INFO -   Max iterations: 5
2025-08-25 17:11:49,062 - innolab - INFO -   Project key: my-service
2025-08-25 17:11:49,062 - innolab - INFO -   Source code path: d:\InnoLab\projects
2025-08-25 17:11:49,063 - innolab - INFO -   Scan directory: SonarQ
2025-08-25 17:11:49,063 - innolab - INFO -   Scan mode: ['bearer']
2025-08-25 17:11:49,063 - innolab - INFO -   Fix mode: ['llm']
2025-08-25 17:11:49,063 - innolab - INFO -   RAG available: True
2025-08-25 17:11:49,063 - innolab - INFO - Starting execution without RAG (mode: DifyMode.CLOUD)
2025-08-25 17:11:49,063 - innolab - INFO - 
=== ITERATION 1/5 ===
2025-08-25 17:11:49,065 - innolab - INFO - Starting Bearer scan for project: my-service
2025-08-25 17:11:49,066 - innolab - INFO - Removed existing Bearer results file: d:\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-25 17:11:49,066 - innolab - INFO - Scanning directory: d:\InnoLab\projects\SonarQ
2025-08-25 17:11:49,067 - innolab - ERROR - Command not found: bearer
2025-08-25 17:11:49,067 - innolab - INFO - Using Bearer Docker image
2025-08-25 17:11:49,067 - innolab - INFO - Running Bearer Docker scan: docker run --rm -v d:\InnoLab\projects\SonarQ:/scan -v d:\InnoLab\projects\SonarQ\bearer_results:/output bearer/bearer:latest scan /scan --format json --output /output/bearer_results_my-service.json --quiet
2025-08-25 17:11:50,216 - innolab - INFO - Analyzing codebase
2025-08-25 17:11:55,655 - innolab - ERROR - Command failed with return code 1
2025-08-25 17:11:55,657 - innolab - INFO - Bearer Docker scan completed successfully
2025-08-25 17:11:55,657 - innolab - INFO - Reading Bearer scan results from: d:\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-25 17:11:55,659 - innolab - INFO - Bearer scan results loaded successfully
2025-08-25 17:11:55,660 - innolab - INFO - Found 12 Bearer security issues
2025-08-25 17:11:55,661 - innolab - INFO - BEARER scanner found 12 bugs
2025-08-25 17:11:55,662 - innolab - INFO - Iteration 1: Found 12 open bugs (0 BUG, 0 CODE_SMELL) across scanners: BEARER
2025-08-25 17:11:55,663 - innolab - INFO - Need to fix 12 bugs using Dify
2025-08-25 17:11:55,664 - innolab - INFO - Running workflow with Dify API: app-6bGJaqyHPDlgGWYCqEl8OIw2
2025-08-25 17:11:55,665 - innolab - INFO - User: hieult
2025-08-25 17:11:55,666 - innolab - INFO - Mode: DifyMode.CLOUD
2025-08-25 17:11:55,667 - innolab - INFO - Base URL: https://api.dify.ai/v1
2025-08-25 17:11:55,668 - innolab - INFO - Generating Dify headers for api_key: app-6b...
2025-08-25 17:11:55,669 - innolab - INFO - POST https://api.dify.ai/v1/workflows/run with payload: {'inputs': {'is_use_rag': 'False', 'src': '', 'report': '[{"key": "bearer_python_lang_avoid_pickle_dacfec7a132bf64e199a6d2ad0d36a87_0", "rule": "python_lang_avoid_pickle", "severity": "BLOCKER", "component": "appy.py", "line": 14, "message": "Usage of unsafe Pickle libraries. ## Description\\n\\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-502"], "creationDate": "2025-08-25T17:11:55.660130", "updateDate": "2025-08-25T17:11:55.660145", "textRange": {"startLine": 14, "endLine": 14, "startOffset": 12, "endOffset": 30}}, {"key": "bearer_python_lang_avoid_pickle_8a3f570abd0595ba27fadad58e40d4de_0", "rule": "python_lang_avoid_pickle", "severity": "BLOCKER", "component": "demo_project/vulnerable_app.py", "line": 14, "message": "Usage of unsafe Pickle libraries. ## Description\\n\\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-502"], "creationDate": "2025-08-25T17:11:55.660236", "updateDate": "2025-08-25T17:11:55.660240", "textRange": {"startLine": 14, "endLine": 14, "startOffset": 12, "endOffset": 30}}, {"key": "bearer_python_lang_eval_using_user_input_d5dfedc4d51dc215b12ad26255354d7a_0", "rule": "python_lang_eval_using_user_input", "severity": "BLOCKER", "component": "appy.py", "line": 40, "message": "Unsanitized user input in \'eval\' type function. ## Description\\n\\nExecuting code with \'eval\' or similar functions using unsanitized user input is risky and can lead to code injection vulnerabilities. This happens when external input is used directly ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-95"], "creationDate": "2025-08-25T17:11:55.660320", "updateDate": "2025-08-25T17:11:55.660323", "textRange": {"startLine": 40, "endLine": 40, "startOffset": 12, "endOffset": 27}}, {"key": "bearer_python_lang_eval_using_user_input_89fb7a20be51b823e5fa1b1ca51d0e75_0", "rule": "python_lang_eval_using_user_input", "severity": "BLOCKER", "component": "demo_project/vulnerable_app.py", "line": 40, "message": "Unsanitized user input in \'eval\' type function. ## Description\\n\\nExecuting code with \'eval\' or similar functions using unsanitized user input is risky and can lead to code injection vulnerabilities. This happens when external input is used directly ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-95"], "creationDate": "2025-08-25T17:11:55.660380", "updateDate": "2025-08-25T17:11:55.660382", "textRange": {"startLine": 40, "endLine": 40, "startOffset": 12, "endOffset": 27}}, {"key": "bearer_python_lang_os_command_injection_c3ac133355ff26f071b13c04a906e74b_0", "rule": "python_lang_os_command_injection", "severity": "BLOCKER", "component": "appy.py", "line": 27, "message": "Unsanitized user input in OS command. ## Description\\n\\nDirectly incorporating external or user-defined input into an OS command exposes the system to possible command injection attacks. This vulnerability allows attackers to execute unauth...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-78"], "creationDate": "2025-08-25T17:11:55.660430", "updateDate": "2025-08-25T17:11:55.660433", "textRange": {"startLine": 27, "endLine": 27, "startOffset": 12, "endOffset": 44}}, {"key": "bearer_python_lang_os_command_injection_d77d86641ec1dbcbbbc996aa1ae1b2fe_0", "rule": "python_lang_os_command_injection", "severity": "BLOCKER", "component": "demo_project/vulnerable_app.py", "line": 27, "message": "Unsanitized user input in OS command. ## Description\\n\\nDirectly incorporating external or user-defined input into an OS command exposes the system to possible command injection attacks. This vulnerability allows attackers to execute unauth...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-78"], "creationDate": "2025-08-25T17:11:55.660474", "updateDate": "2025-08-25T17:11:55.660477", "textRange": {"startLine": 27, "endLine": 27, "startOffset": 12, "endOffset": 44}}, {"key": "bearer_python_lang_sql_injection_1b437faf8d51b69f624d934987bfd5a2_0", "rule": "python_lang_sql_injection", "severity": "BLOCKER", "component": "appy.py", "line": 21, "message": "Unsanitized external input in SQL query. ## Description\\n\\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vul...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-89"], "creationDate": "2025-08-25T17:11:55.660536", "updateDate": "2025-08-25T17:11:55.660539", "textRange": {"startLine": 21, "endLine": 21, "startOffset": 5, "endOffset": 26}}, {"key": "bearer_python_lang_sql_injection_e400e73bc1e8e647404e1fb7e9199492_0", "rule": "python_lang_sql_injection", "severity": "BLOCKER", "component": "demo_project/vulnerable_app.py", "line": 21, "message": "Unsanitized external input in SQL query. ## Description\\n\\nUsing unsanitized data, such as user input or request data, or externally influenced data passed to a function, in SQL query exposes your application to SQL injection attacks. This vul...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-89"], "creationDate": "2025-08-25T17:11:55.660587", "updateDate": "2025-08-25T17:11:55.660590", "textRange": {"startLine": 21, "endLine": 21, "startOffset": 5, "endOffset": 26}}, {"key": "bearer_python_lang_path_traversal_1d58064e45168acf7b89c9cd00995c69_0", "rule": "python_lang_path_traversal", "severity": "CRITICAL", "component": "appy.py", "line": 35, "message": "Unsanitized dynamic input in file path. ## Description\\n\\nUsing unsanitized dynamic input to determine file paths can allow attackers to gain access to files and folders outside of the intended scope. This vulnerability occurs when input prov...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "security", "medium", "cwe-22"], "creationDate": "2025-08-25T17:11:55.660638", "updateDate": "2025-08-25T17:11:55.660641", "textRange": {"startLine": 35, "endLine": 35, "startOffset": 10, "endOffset": 43}}, {"key": "bearer_python_lang_path_traversal_d635f3835fef469326612802fe0c81ee_0", "rule": "python_lang_path_traversal", "severity": "CRITICAL", "component": "demo_project/vulnerable_app.py", "line": 35, "message": "Unsanitized dynamic input in file path. ## Description\\n\\nUsing unsanitized dynamic input to determine file paths can allow attackers to gain access to files and folders outside of the intended scope. This vulnerability occurs when input prov...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "security", "medium", "cwe-22"], "creationDate": "2025-08-25T17:11:55.660683", "updateDate": "2025-08-25T17:11:55.660686", "textRange": {"startLine": 35, "endLine": 35, "startOffset": 10, "endOffset": 43}}, {"key": "bearer_python_lang_weak_hash_md5_403b9d8f405ebbdf90685e618477f370_0", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "appy.py", "line": 31, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-25T17:11:55.660729", "updateDate": "2025-08-25T17:11:55.660731", "textRange": {"startLine": 31, "endLine": 31, "startOffset": 12, "endOffset": 42}}, {"key": "bearer_python_lang_weak_hash_md5_9c5dd39a018527fad89f6c0d4b7b6d93_0", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "demo_project/vulnerable_app.py", "line": 31, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-25T17:11:55.660777", "updateDate": "2025-08-25T17:11:55.660780", "textRange": {"startLine": 31, "endLine": 31, "startOffset": 12, "endOffset": 42}}]'}, 'user': 'hieult', 'response_mode': 'blocking'}
2025-08-25 17:12:09,186 - innolab - INFO - Dify workflow run response status: 200
2025-08-25 17:12:09,186 - innolab - INFO - Dify workflow run response: {"task_id": "5cea371e-b7d5-4e04-b169-ff19913ae893", "workflow_run_id": "1e080951-833b-4487-9fb6-53f23cc80b31", "data": {"id": "1e080951-833b-4487-9fb6-53f23cc80b31", "workflow_id": "d2c61c79-9cfd-4119-9bd2-aab5af95a8dd", "status": "failed", "outputs": {}, "error": "Invalid actual value type: string or array", "elapsed_time": 12.582878, "total_tokens": 321526, "total_steps": 4, "created_at": 1756116715, "finished_at": 1756116728}}
2025-08-25 17:12:09,187 - innolab - INFO - DIFY: list_bugs type: <class 'str'>, content: 
2025-08-25 17:12:09,187 - innolab - INFO - DIFY: Initial bugs_to_fix from response: 0
2025-08-25 17:12:09,188 - innolab - ERROR - Failed to parse list_real_bugs as JSON: Expecting value: line 1 column 1 (char 0)
2025-08-25 17:12:09,188 - innolab - INFO - No real bugs to fix after analysis
2025-08-25 17:12:09,188 - innolab - INFO - === EXECUTION RESULT ===
2025-08-25 17:12:09,188 - innolab - INFO - Mode: CLOUD
2025-08-25 17:12:09,189 - innolab - INFO - Project: my-service
2025-08-25 17:12:09,189 - innolab - INFO - Total bugs fixed: 0
2025-08-25 17:12:09,189 - innolab - INFO - Total iterations: 1
2025-08-25 17:12:09,189 - innolab - INFO - Start time: 2025-08-25T17:11:49.063547
2025-08-25 17:12:09,190 - innolab - INFO - End time: 2025-08-25T17:12:09.188676
2025-08-25 17:12:09,190 - innolab - INFO - Iteration 1: 12 bugs found, 0 fixed
