2025-08-26 09:36:39,904 - innolab - INFO - ExecutionServiceNoMongo initialized with:
2025-08-26 09:36:39,905 - innolab - INFO -   Max iterations: 5
2025-08-26 09:36:39,905 - innolab - INFO -   Project key: my-service
2025-08-26 09:36:39,905 - innolab - INFO -   Source code path: d:\InnoLab\projects
2025-08-26 09:36:39,905 - innolab - INFO -   Scan directory: Flask_App
2025-08-26 09:36:39,905 - innolab - INFO -   Scan mode: ['bearer']
2025-08-26 09:36:39,906 - innolab - INFO -   Fix mode: ['llm']
2025-08-26 09:36:39,906 - innolab - INFO -   RAG available: True
2025-08-26 09:36:39,906 - innolab - INFO - Starting execution without RAG (mode: DifyMode.CLOUD)
2025-08-26 09:36:39,906 - innolab - INFO - 
=== ITERATION 1/5 ===
2025-08-26 09:36:39,907 - innolab - INFO - Starting Bearer scan for project: my-service
2025-08-26 09:36:39,908 - innolab - INFO - Removed existing Bearer results file: d:\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-26 09:36:39,908 - innolab - INFO - Scanning directory: d:\InnoLab\projects\Flask_App
2025-08-26 09:36:39,909 - innolab - ERROR - Command not found: bearer
2025-08-26 09:36:39,909 - innolab - INFO - Using Bearer Docker image
2025-08-26 09:36:39,910 - innolab - INFO - Running Bearer Docker scan: docker run --rm -v d:\InnoLab\projects\Flask_App:/scan -v d:\InnoLab\projects\SonarQ\bearer_results:/output bearer/bearer:latest scan /scan --format json --output /output/bearer_results_my-service.json --quiet
2025-08-26 09:36:41,025 - innolab - INFO - Analyzing codebase
2025-08-26 09:36:47,557 - innolab - ERROR - Command failed with return code 1
2025-08-26 09:36:47,558 - innolab - INFO - Bearer Docker scan completed successfully
2025-08-26 09:36:47,558 - innolab - INFO - Reading Bearer scan results from: d:\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-26 09:36:47,559 - innolab - INFO - Bearer scan results loaded successfully
2025-08-26 09:36:47,559 - innolab - INFO - Found 9 Bearer security issues
2025-08-26 09:36:47,559 - innolab - INFO - BEARER scanner found 9 bugs
2025-08-26 09:36:47,560 - innolab - INFO - Iteration 1: Found 9 open bugs (0 BUG, 0 CODE_SMELL) across scanners: BEARER
2025-08-26 09:36:47,560 - innolab - ERROR - Scan directory not found: D:\InnoLab\Flask_App
2025-08-26 09:36:47,561 - innolab - INFO - Need to fix 9 bugs using Dify
2025-08-26 09:36:47,561 - innolab - INFO - Running workflow with Dify API: app-6bGJaqyHPDlgGWYCqEl8OIw2
2025-08-26 09:36:47,561 - innolab - INFO - User: hieult
2025-08-26 09:36:47,562 - innolab - INFO - Mode: DifyMode.CLOUD
2025-08-26 09:36:47,562 - innolab - INFO - Base URL: https://api.dify.ai/v1
2025-08-26 09:36:47,562 - innolab - INFO - Generating Dify headers for api_key: app-6b...
2025-08-26 09:36:47,562 - innolab - INFO - POST https://api.dify.ai/v1/workflows/run with payload: {'inputs': {'is_use_rag': 'False', 'src': '', 'report': '[{"key": "bearer_javascript_lang_dynamic_os_command_a15877223715018ff0b40de8ae5380b1_0", "rule": "javascript_lang_dynamic_os_command", "severity": "BLOCKER", "component": "test_vuln.js", "line": 20, "message": "Unsanitized dynamic input in OS command. ## Description\\n\\nIncorporating unsanitized dynamic input directly into operating system commands poses a significant security risk. This practice could give attackers the opportunity to execute harmful...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-78"], "creationDate": "2025-08-26T09:36:47.559418", "updateDate": "2025-08-26T09:36:47.559425", "textRange": {"startLine": 20, "endLine": 20, "startOffset": 5, "endOffset": 7}}, {"key": "bearer_javascript_lang_hardcoded_secret_e9148cb3e49ff316df66e00484a16228_0", "rule": "javascript_lang_hardcoded_secret", "severity": "BLOCKER", "component": "test_vuln.js", "line": 6, "message": "Usage of hard-coded secret. ## Description\\n\\nStoring secrets directly in your code is a security risk. Instead, opt for environment variables or a secret management system to safeguard your secrets.\\n\\n## Remediations\\n\\n- **Do not**...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-798"], "creationDate": "2025-08-26T09:36:47.559453", "updateDate": "2025-08-26T09:36:47.559454", "textRange": {"startLine": 6, "endLine": 6, "startOffset": 1, "endOffset": 39}}, {"key": "bearer_javascript_lang_hardcoded_secret_e9148cb3e49ff316df66e00484a16228_1", "rule": "javascript_lang_hardcoded_secret", "severity": "BLOCKER", "component": "test_vuln.js", "line": 7, "message": "Usage of hard-coded secret. ## Description\\n\\nStoring secrets directly in your code is a security risk. Instead, opt for environment variables or a secret management system to safeguard your secrets.\\n\\n## Remediations\\n\\n- **Do not**...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-798"], "creationDate": "2025-08-26T09:36:47.559473", "updateDate": "2025-08-26T09:36:47.559474", "textRange": {"startLine": 7, "endLine": 7, "startOffset": 1, "endOffset": 32}}, {"key": "bearer_javascript_lang_os_command_injection_cc39913b65829db5799c3ad743e397e7_0", "rule": "javascript_lang_os_command_injection", "severity": "BLOCKER", "component": "test_vuln.js", "line": 20, "message": "Unsanitized user input in OS command. ## Description\\n\\nExecuting operating system commands with unsanitized user input can lead to command injection vulnerabilities. This occurs when attackers manipulate the input to execute unauthorized c...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-78"], "creationDate": "2025-08-26T09:36:47.559491", "updateDate": "2025-08-26T09:36:47.559492", "textRange": {"startLine": 20, "endLine": 20, "startOffset": 5, "endOffset": 7}}, {"key": "bearer_javascript_express_cross_site_scripting_e665897cc7ecdef8d764bb2388077790_0", "rule": "javascript_express_cross_site_scripting", "severity": "CRITICAL", "component": "test_vuln.js", "line": 13, "message": "Unsanitized user input in HTTP response (XSS). ## Description\\n\\nIncluding unsanitized user input in HTTP responses exposes your application to cross-site scripting (XSS) attacks. This vulnerability allows attackers to inject malicious scripts into ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "security", "medium", "cwe-79"], "creationDate": "2025-08-26T09:36:47.559511", "updateDate": "2025-08-26T09:36:47.559512", "textRange": {"startLine": 13, "endLine": 13, "startOffset": 5, "endOffset": 20}}, {"key": "bearer_javascript_express_cross_site_scripting_e665897cc7ecdef8d764bb2388077790_1", "rule": "javascript_express_cross_site_scripting", "severity": "CRITICAL", "component": "test_vuln.js", "line": 28, "message": "Unsanitized user input in HTTP response (XSS). ## Description\\n\\nIncluding unsanitized user input in HTTP responses exposes your application to cross-site scripting (XSS) attacks. This vulnerability allows attackers to inject malicious scripts into ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "security", "medium", "cwe-79"], "creationDate": "2025-08-26T09:36:47.559524", "updateDate": "2025-08-26T09:36:47.559525", "textRange": {"startLine": 28, "endLine": 28, "startOffset": 5, "endOffset": 54}}, {"key": "bearer_javascript_lang_raw_html_using_user_input_9be1e223403fc9dcb11396f4579547d6_0", "rule": "javascript_lang_raw_html_using_user_input", "severity": "CRITICAL", "component": "test_vuln.js", "line": 28, "message": "Unsanitized user input in raw HTML strings (XSS). ## Description\\n\\nIncluding unsanitized user input in HTML exposes your application to cross-site scripting (XSS) attacks. This vulnerability allows attackers to inject malicious scripts into web pages ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "security", "medium", "cwe-79"], "creationDate": "2025-08-26T09:36:47.559539", "updateDate": "2025-08-26T09:36:47.559540", "textRange": {"startLine": 28, "endLine": 28, "startOffset": 14, "endOffset": 53}}, {"key": "bearer_javascript_express_helmet_missing_7fde4398d401d13a4909acdaa783f38f_0", "rule": "javascript_express_helmet_missing", "severity": "MAJOR", "component": "test_vuln.js", "line": 2, "message": "Missing Helmet configuration on HTTP headers. ## Description\\n\\nHelmet can help protect your app from some well-known web vulnerabilities by setting HTTP headers appropriately. Failing to configure Helmet for HTTP headers leaves your application vu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-693"], "creationDate": "2025-08-26T09:36:47.559551", "updateDate": "2025-08-26T09:36:47.559552", "textRange": {"startLine": 2, "endLine": 2, "startOffset": 13, "endOffset": 22}}, {"key": "bearer_javascript_express_reduce_fingerprint_c72b79444d58bb2e38b078dcb8dcb120_0", "rule": "javascript_express_reduce_fingerprint", "severity": "MAJOR", "component": "test_vuln.js", "line": 2, "message": "Missing server configuration to reduce server fingerprinting. ## Description\\n\\nReducing server fingerprinting enhances security by making it harder for attackers to identify the software your server is running. Server fingerprinting involves analyzing the unique ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-693"], "creationDate": "2025-08-26T09:36:47.559565", "updateDate": "2025-08-26T09:36:47.559566", "textRange": {"startLine": 2, "endLine": 2, "startOffset": 13, "endOffset": 22}}]'}, 'user': 'hieult', 'response_mode': 'blocking'}
2025-08-26 09:36:57,043 - innolab - INFO - Dify workflow run response status: 200
2025-08-26 09:36:57,044 - innolab - INFO - Dify workflow run response: {"task_id": "ffce471b-f093-4e8d-ba0c-e6f3584b11fb", "workflow_run_id": "8a217051-a7ae-4e34-9b4b-6447df32351f", "data": {"id": "8a217051-a7ae-4e34-9b4b-6447df32351f", "workflow_id": "d2c61c79-9cfd-4119-9bd2-aab5af95a8dd", "status": "failed", "outputs": {}, "error": "Invalid actual value type: string or array", "elapsed_time": 8.541995, "total_tokens": 199638, "total_steps": 4, "created_at": 1756175808, "finished_at": 1756175817}}
2025-08-26 09:36:57,045 - innolab - INFO - DIFY: list_bugs type: <class 'str'>, content: 
2025-08-26 09:36:57,045 - innolab - INFO - DIFY: Initial bugs_to_fix from response: 0
2025-08-26 09:36:57,045 - innolab - ERROR - Failed to parse list_real_bugs as JSON: Expecting value: line 1 column 1 (char 0)
2025-08-26 09:36:57,046 - innolab - INFO - No real bugs to fix after analysis
2025-08-26 09:36:57,046 - innolab - INFO - === EXECUTION RESULT ===
2025-08-26 09:36:57,046 - innolab - INFO - Mode: CLOUD
2025-08-26 09:36:57,047 - innolab - INFO - Project: my-service
2025-08-26 09:36:57,047 - innolab - INFO - Total bugs fixed: 0
2025-08-26 09:36:57,047 - innolab - INFO - Total iterations: 1
2025-08-26 09:36:57,047 - innolab - INFO - Start time: 2025-08-26T09:36:39.906764
2025-08-26 09:36:57,047 - innolab - INFO - End time: 2025-08-26T09:36:57.046646
2025-08-26 09:36:57,047 - innolab - INFO - Iteration 1: 9 bugs found, 0 fixed
