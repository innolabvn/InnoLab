2025-08-27 10:46:12,327 - innolab - INFO - ExecutionServiceNoMongo initialized with:
2025-08-27 10:46:12,327 - innolab - INFO -   Max iterations: 5
2025-08-27 10:46:12,327 - innolab - INFO -   Project key: my-service
2025-08-27 10:46:12,327 - innolab - INFO -   Source code path: c:\Users\HieuLT\Desktop\InnoLab\projects
2025-08-27 10:46:12,327 - innolab - INFO -   Scan directory: Flask_App
2025-08-27 10:46:12,327 - innolab - INFO -   Scan mode: ['bearer']
2025-08-27 10:46:12,327 - innolab - INFO -   Fix mode: ['llm']
2025-08-27 10:46:12,327 - innolab - INFO -   RAG available: True
2025-08-27 10:46:12,329 - innolab - INFO - Starting execution without RAG (mode: DifyMode.LOCAL)
2025-08-27 10:46:12,329 - innolab - INFO - 
=== ITERATION 1/5 ===
2025-08-27 10:46:12,329 - innolab - INFO - Starting Bearer scan for project: my-service
2025-08-27 10:46:12,330 - innolab - INFO - Removed existing Bearer results file: c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-27 10:46:12,331 - innolab - INFO - Scanning directory: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:46:12,332 - innolab - ERROR - Command not found: bearer
2025-08-27 10:46:12,332 - innolab - INFO - Using Bearer Docker image
2025-08-27 10:46:12,332 - innolab - INFO - Running Bearer Docker scan: docker run --rm -v c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App:/scan -v c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results:/output bearer/bearer:latest scan /scan --format json --output /output/bearer_results_my-service.json --quiet --skip-path node_modules,*.git,__pycache__,.venv,venv,dist,build
2025-08-27 10:46:13,412 - innolab - INFO - Analyzing codebase
2025-08-27 10:46:19,662 - innolab - ERROR - Command failed with return code 1
2025-08-27 10:46:19,664 - innolab - INFO - Bearer Docker scan completed successfully
2025-08-27 10:46:19,664 - innolab - INFO - Reading Bearer scan results from: c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-27 10:46:19,666 - innolab - INFO - Bearer scan results loaded successfully
2025-08-27 10:46:19,667 - innolab - INFO - Found 5 Bearer security issues
2025-08-27 10:46:19,667 - innolab - INFO - BEARER scanner found 5 bugs
2025-08-27 10:46:19,668 - innolab - INFO - Iteration 1: Found 5 open bugs (0 BUG, 0 CODE_SMELL) across scanners: BEARER
2025-08-27 10:46:19,668 - innolab - ERROR - Scan directory not found: C:\Users\HieuLT\Desktop\InnoLab\Flask_App
2025-08-27 10:46:19,669 - innolab - INFO - Need to fix 5 bugs using Dify
2025-08-27 10:46:19,670 - innolab - INFO - Running workflow with Dify API: app-21rA0wUAaR7PKPdmCX2WJxMo
2025-08-27 10:46:19,670 - innolab - INFO - User: hieult
2025-08-27 10:46:19,671 - innolab - INFO - Mode: DifyMode.LOCAL
2025-08-27 10:46:19,671 - innolab - INFO - Base URL: http://localhost:5001/v1
2025-08-27 10:46:19,672 - innolab - INFO - Generating Dify headers for api_key: app-21...
2025-08-27 10:46:19,672 - innolab - INFO - POST http://localhost:5001/v1/workflows/run with payload: {'inputs': {'is_use_rag': 'False', 'src': '', 'report': '[{"key": "bearer_python_lang_avoid_pickle_3d8bc9945ac20db0da36e3db83cdb41a_0", "rule": "python_lang_avoid_pickle", "severity": "BLOCKER", "component": "owasp_insecure_demo.py", "line": 167, "message": "Usage of unsafe Pickle libraries. ## Description\\n\\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "critical", "security", "medium", "cwe-502"], "creationDate": "2025-08-27T10:46:19.667069", "updateDate": "2025-08-27T10:46:19.667079", "textRange": {"startLine": 167, "endLine": 167, "startOffset": 15, "endOffset": 33}}, {"key": "bearer_python_lang_ssl_verification_75c7b3a22c569565d6a6ddca3576a54f_0", "rule": "python_lang_ssl_verification", "severity": "CRITICAL", "component": "owasp_insecure_demo.py", "line": 179, "message": "Missing SSL certificate verification. ## Description\\n\\nMissing or optional SSL certificate verification can compromise the security of sensitive data. This vulnerability arises when an application fails to check for valid SSL certificates ...", "status": "OPEN", "type": "VULNERABILITY", "effort": "15min", "debt": "15min", "tags": ["security", "bearer", "high", "security", "medium", "cwe-295"], "creationDate": "2025-08-27T10:46:19.667146", "updateDate": "2025-08-27T10:46:19.667150", "textRange": {"startLine": 179, "endLine": 179, "startOffset": 13, "endOffset": 55}}, {"key": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_0", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "owasp_insecure_demo.py", "line": 41, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-27T10:46:19.667196", "updateDate": "2025-08-27T10:46:19.667198", "textRange": {"startLine": 41, "endLine": 41, "startOffset": 18, "endOffset": 42}}, {"key": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_1", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "owasp_insecure_demo.py", "line": 74, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-27T10:46:19.667228", "updateDate": "2025-08-27T10:46:19.667231", "textRange": {"startLine": 74, "endLine": 74, "startOffset": 14, "endOffset": 44}}, {"key": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_2", "rule": "python_lang_weak_hash_md5", "severity": "MAJOR", "component": "owasp_insecure_demo.py", "line": 90, "message": "Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "status": "OPEN", "type": "VULNERABILITY", "effort": "10min", "debt": "10min", "tags": ["security", "bearer", "medium", "security", "medium", "cwe-328"], "creationDate": "2025-08-27T10:46:19.667264", "updateDate": "2025-08-27T10:46:19.667267", "textRange": {"startLine": 90, "endLine": 90, "startOffset": 14, "endOffset": 44}}]'}, 'user': 'hieult', 'response_mode': 'blocking'}
2025-08-27 10:46:26,820 - innolab - INFO - Dify workflow run response status: 200
2025-08-27 10:46:26,820 - innolab - INFO - Dify workflow run response: {"task_id": "b251cbeb-45f5-4a34-b229-ba5cbcde17fd", "workflow_run_id": "de162c30-7b68-4398-a0da-4c02fdad5c54", "data": {"id": "de162c30-7b68-4398-a0da-4c02fdad5c54", "workflow_id": "1ab32356-d6d5-4b3b-924e-5a66bb39ab5b", "status": "succeeded", "outputs": {"list_bugs": {"bugs": [{"action": "Fix", "bug_id": "bearer_python_lang_avoid_pickle_3d8bc9945ac20db0da36e3db83cdb41a_0", "classification": "True Positive", "reason": "The code uses the `pickle` library, which is known to be vulnerable to arbitrary code execution. This is a security vulnerability that needs to be addressed.", "rule_description": "Usage of unsafe Pickle libraries. ## Description\n\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...", "rule_key": "python_lang_avoid_pickle", "type": "vulnerability"}, {"action": "Fix", "bug_id": "bearer_python_lang_ssl_verification_75c7b3a22c569565d6a6ddca3576a54f_0", "classification": "True Positive", "reason": "The code is missing SSL certificate verification, which can compromise the security of sensitive data. This is a security vulnerability that needs to be addressed.", "rule_description": "Missing SSL certificate verification. ## Description\n\nMissing or optional SSL certificate verification can compromise the security of sensitive data. This vulnerability arises when an application fails to check for valid SSL certificates ...", "rule_key": "python_lang_ssl_verification", "type": "vulnerability"}, {"action": "Fix", "bug_id": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_0", "classification": "True Positive", "reason": "The code uses the MD5 hashing algorithm, which is considered weak and vulnerable to collision attacks. This is a security vulnerability that needs to be addressed.", "rule_description": "Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "rule_key": "python_lang_weak_hash_md5", "type": "vulnerability"}, {"action": "Fix", "bug_id": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_1", "classification": "True Positive", "reason": "The code uses the MD5 hashing algorithm, which is considered weak and vulnerable to collision attacks. This is a security vulnerability that needs to be addressed.", "rule_description": "Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "rule_key": "python_lang_weak_hash_md5", "type": "vulnerability"}, {"action": "Fix", "bug_id": "bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_2", "classification": "True Positive", "reason": "The code uses the MD5 hashing algorithm, which is considered weak and vulnerable to collision attacks. This is a security vulnerability that needs to be addressed.", "rule_description": "Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...", "rule_key": "python_lang_weak_hash_md5", "type": "vulnerability"}], "bugs_to_fix": 5}, "bugs_to_fix": "{\n  \"bugs\": [\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_avoid_pickle_3d8bc9945ac20db0da36e3db83cdb41a_0\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The code uses the `pickle` library, which is known to be vulnerable to arbitrary code execution. This is a security vulnerability that needs to be addressed.\",\n      \"rule_description\": \"Usage of unsafe Pickle libraries. ## Description\\n\\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...\",\n      \"rule_key\": \"python_lang_avoid_pickle\",\n      \"type\": \"vulnerability\"\n    },\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_ssl_verification_75c7b3a22c569565d6a6ddca3576a54f_0\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The code is missing SSL certificate verification, which can compromise the security of sensitive data. This is a security vulnerability that needs to be addressed.\",\n      \"rule_description\": \"Missing SSL certificate verification. ## Description\\n\\nMissing or optional SSL certificate verification can compromise the security of sensitive data. This vulnerability arises when an application fails to check for valid SSL certificates ...\",\n      \"rule_key\": \"python_lang_ssl_verification\",\n      \"type\": \"vulnerability\"\n    },\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_0\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The code uses the MD5 hashing algorithm, which is considered weak and vulnerable to collision attacks. This is a security vulnerability that needs to be addressed.\",\n      \"rule_description\": \"Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...\",\n      \"rule_key\": \"python_lang_weak_hash_md5\",\n      \"type\": \"vulnerability\"\n    },\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_1\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The code uses the MD5 hashing algorithm, which is considered weak and vulnerable to collision attacks. This is a security vulnerability that needs to be addressed.\",\n      \"rule_description\": \"Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...\",\n      \"rule_key\": \"python_lang_weak_hash_md5\",\n      \"type\": \"vulnerability\"\n    },\n    {\n      \"action\": \"Fix\",\n      \"bug_id\": \"bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_2\",\n      \"classification\": \"True Positive\",\n      \"reason\": \"The code uses the MD5 hashing algorithm, which is considered weak and vulnerable to collision attacks. This is a security vulnerability that needs to be addressed.\",\n      \"rule_description\": \"Usage of weak hashing library (MDx). ## Description\\n\\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...\",\n      \"rule_key\": \"python_lang_weak_hash_md5\",\n      \"type\": \"vulnerability\"\n    }\n  ],\n  \"bugs_to_fix\": 5\n}"}, "error": "", "elapsed_time": 6.96711, "total_tokens": 4793, "total_steps": 4, "created_at": 1756266379, "finished_at": 1756266386}}
2025-08-27 10:46:26,822 - innolab - INFO - DIFY: list_bugs type: <class 'dict'>, content: {'bugs': [{'action': 'Fix', 'bug_id': 'bearer_python_lang_avoid_pickle_3d8bc9945ac20db0da36e3db83cdb41a_0', 'classification': 'True Positive', 'reason': 'The code uses the `pickle` library, which is known to be vulnerable to arbitrary code execution. This is a security vulnerability that needs to be addressed.', 'rule_description': 'Usage of unsafe Pickle libraries. ## Description\n\nUsing pickle, _pickle and cPickle can make your application vulnerable to unsafe code execution. This is because the deserialization logic of these libraries allows for arbitrary code ...', 'rule_key': 'python_lang_avoid_pickle', 'type': 'vulnerability'}, {'action': 'Fix', 'bug_id': 'bearer_python_lang_ssl_verification_75c7b3a22c569565d6a6ddca3576a54f_0', 'classification': 'True Positive', 'reason': 'The code is missing SSL certificate verification, which can compromise the security of sensitive data. This is a security vulnerability that needs to be addressed.', 'rule_description': 'Missing SSL certificate verification. ## Description\n\nMissing or optional SSL certificate verification can compromise the security of sensitive data. This vulnerability arises when an application fails to check for valid SSL certificates ...', 'rule_key': 'python_lang_ssl_verification', 'type': 'vulnerability'}, {'action': 'Fix', 'bug_id': 'bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_0', 'classification': 'True Positive', 'reason': 'The code uses the MD5 hashing algorithm, which is considered weak and vulnerable to collision attacks. This is a security vulnerability that needs to be addressed.', 'rule_description': 'Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...', 'rule_key': 'python_lang_weak_hash_md5', 'type': 'vulnerability'}, {'action': 'Fix', 'bug_id': 'bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_1', 'classification': 'True Positive', 'reason': 'The code uses the MD5 hashing algorithm, which is considered weak and vulnerable to collision attacks. This is a security vulnerability that needs to be addressed.', 'rule_description': 'Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...', 'rule_key': 'python_lang_weak_hash_md5', 'type': 'vulnerability'}, {'action': 'Fix', 'bug_id': 'bearer_python_lang_weak_hash_md5_067dd1abb0e02d41f260b99c894ed303_2', 'classification': 'True Positive', 'reason': 'The code uses the MD5 hashing algorithm, which is considered weak and vulnerable to collision attacks. This is a security vulnerability that needs to be addressed.', 'rule_description': 'Usage of weak hashing library (MDx). ## Description\n\nUsing a weak hashing library, such as MD5, increases the risk of data breaches. MD5 itself is vulnerable to collision attacks, where two different inputs can produce the same hash valu...', 'rule_key': 'python_lang_weak_hash_md5', 'type': 'vulnerability'}], 'bugs_to_fix': 5}
2025-08-27 10:46:26,823 - innolab - INFO - DIFY: Initial bugs_to_fix from response: 5
2025-08-27 10:46:26,823 - innolab - INFO - Starting fix_bugs for 2 bugs
2025-08-27 10:46:26,824 - innolab - INFO - DEBUG: scan_directory = Flask_App
2025-08-27 10:46:26,824 - innolab - INFO - DEBUG: innolab_root = c:\Users\HieuLT\Desktop\InnoLab\projects
2025-08-27 10:46:26,824 - innolab - INFO - DEBUG: source_dir = c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:46:26,824 - innolab - INFO - Fixing bugs in directory: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:46:26,826 - innolab - INFO - Created issues file: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App\list_real_bugs.json with 2 bugs
2025-08-27 10:46:26,826 - innolab - INFO - Running command: python C:\Users\HieuLT\Desktop\InnoLab\SonarQ\batch_fix.py c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App --fix --auto --issues-file list_real_bugs.json
2025-08-27 10:46:30,478 - innolab - INFO - Enhanced Secure Batch Fix Script
2025-08-27 10:46:30,479 - innolab - INFO - Advanced AI-powered code fixing with validation & safety checks
2025-08-27 10:46:30,479 - innolab - INFO - ======================================================================
2025-08-27 10:46:30,479 - innolab - INFO - FIXING Mode Enabled
2025-08-27 10:46:30,479 - innolab - INFO - Fixing files in-place (overwriting originals)
2025-08-27 10:46:30,480 - innolab - INFO - Issues file not found: list_real_bugs.json
2025-08-27 10:46:30,480 - innolab - INFO - Template usage logging enabled: ./logs\template_usage_20250827_104628.log
2025-08-27 10:46:30,480 - innolab - INFO - Scan Results:
2025-08-27 10:46:30,480 - innolab - INFO - Directory: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:46:30,480 - innolab - INFO - Found 1 code files
2025-08-27 10:46:30,480 - innolab - INFO - Files to process:
2025-08-27 10:46:30,481 - innolab - INFO - 1. owasp_insecure_demo.py
2025-08-27 10:46:30,481 - innolab - INFO - Auto mode: proceeding without confirmation
2025-08-27 10:46:30,481 - innolab - INFO - ======================================================================
2025-08-27 10:46:30,481 - innolab - INFO - Starting secure fixing...
2025-08-27 10:46:30,481 - innolab - INFO - Template usage logging enabled: ./logs\template_usage_20250827_104628.log
2025-08-27 10:46:30,481 - innolab - INFO - [1/1] Fixing: owasp_insecure_demo.py
2025-08-27 10:46:30,482 - innolab - INFO - Retry 1: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
2025-08-27 10:46:30,482 - innolab - INFO - quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
2025-08-27 10:46:30,482 - innolab - INFO - quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
2025-08-27 10:46:30,482 - innolab - INFO - quota_dimensions {
2025-08-27 10:46:30,482 - innolab - INFO - key: "model"
2025-08-27 10:46:30,482 - innolab - INFO - value: "gemini-2.0-flash"
2025-08-27 10:46:30,482 - innolab - INFO - }
2025-08-27 10:46:30,482 - innolab - INFO - quota_dimensions {
2025-08-27 10:46:30,483 - innolab - INFO - key: "location"
2025-08-27 10:46:30,483 - innolab - INFO - value: "global"
2025-08-27 10:46:30,483 - innolab - INFO - }
2025-08-27 10:46:30,483 - innolab - INFO - quota_value: 200
2025-08-27 10:46:30,483 - innolab - INFO - }
2025-08-27 10:46:30,483 - innolab - INFO - , links {
2025-08-27 10:46:30,483 - innolab - INFO - description: "Learn more about Gemini API quotas"
2025-08-27 10:46:30,483 - innolab - INFO - url: "https://ai.google.dev/gemini-api/docs/rate-limits"
2025-08-27 10:46:30,483 - innolab - INFO - }
2025-08-27 10:46:30,483 - innolab - INFO - , retry_delay {
2025-08-27 10:46:30,484 - innolab - INFO - seconds: 31
2025-08-27 10:46:30,484 - innolab - INFO - }
2025-08-27 10:46:30,484 - innolab - INFO - ]
2025-08-27 10:46:30,484 - innolab - INFO - Retry 2: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
2025-08-27 10:46:30,484 - innolab - INFO - quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
2025-08-27 10:46:30,484 - innolab - INFO - quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
2025-08-27 10:46:30,484 - innolab - INFO - quota_dimensions {
2025-08-27 10:46:30,484 - innolab - INFO - key: "model"
2025-08-27 10:46:30,484 - innolab - INFO - value: "gemini-2.0-flash"
2025-08-27 10:46:30,484 - innolab - INFO - }
2025-08-27 10:46:30,485 - innolab - INFO - quota_dimensions {
2025-08-27 10:46:30,485 - innolab - INFO - key: "location"
2025-08-27 10:46:30,485 - innolab - INFO - value: "global"
2025-08-27 10:46:30,485 - innolab - INFO - }
2025-08-27 10:46:30,485 - innolab - INFO - quota_value: 200
2025-08-27 10:46:30,485 - innolab - INFO - }
2025-08-27 10:46:30,485 - innolab - INFO - , links {
2025-08-27 10:46:30,485 - innolab - INFO - description: "Learn more about Gemini API quotas"
2025-08-27 10:46:30,485 - innolab - INFO - url: "https://ai.google.dev/gemini-api/docs/rate-limits"
2025-08-27 10:46:30,485 - innolab - INFO - }
2025-08-27 10:46:30,485 - innolab - INFO - , retry_delay {
2025-08-27 10:46:30,486 - innolab - INFO - seconds: 30
2025-08-27 10:46:30,486 - innolab - INFO - }
2025-08-27 10:46:30,486 - innolab - INFO - ]
2025-08-27 10:46:30,486 - innolab - INFO - Failed: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
2025-08-27 10:46:30,486 - innolab - INFO - quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
2025-08-27 10:46:30,486 - innolab - INFO - quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
2025-08-27 10:46:30,486 - innolab - INFO - quota_dimensions {
2025-08-27 10:46:30,487 - innolab - INFO - key: "model"
2025-08-27 10:46:30,487 - innolab - INFO - value: "gemini-2.0-flash"
2025-08-27 10:46:30,487 - innolab - INFO - }
2025-08-27 10:46:30,487 - innolab - INFO - quota_dimensions {
2025-08-27 10:46:30,487 - innolab - INFO - key: "location"
2025-08-27 10:46:30,487 - innolab - INFO - value: "global"
2025-08-27 10:46:30,487 - innolab - INFO - }
2025-08-27 10:46:30,487 - innolab - INFO - quota_value: 200
2025-08-27 10:46:30,487 - innolab - INFO - }
2025-08-27 10:46:30,488 - innolab - INFO - , links {
2025-08-27 10:46:30,488 - innolab - INFO - description: "Learn more about Gemini API quotas"
2025-08-27 10:46:30,488 - innolab - INFO - url: "https://ai.google.dev/gemini-api/docs/rate-limits"
2025-08-27 10:46:30,488 - innolab - INFO - }
2025-08-27 10:46:30,488 - innolab - INFO - , retry_delay {
2025-08-27 10:46:30,488 - innolab - INFO - seconds: 30
2025-08-27 10:46:30,488 - innolab - INFO - }
2025-08-27 10:46:30,488 - innolab - INFO - ]
2025-08-27 10:46:30,489 - innolab - INFO - ======================================================================
2025-08-27 10:46:30,489 - innolab - INFO - BATCH_FIX_RESULT: SUCCESS
2025-08-27 10:46:30,489 - innolab - INFO - FIXED_FILES: 0
2025-08-27 10:46:30,489 - innolab - INFO - FAILED_FILES: 1
2025-08-27 10:46:30,489 - innolab - INFO - TOTAL_INPUT_TOKENS: 0
2025-08-27 10:46:30,489 - innolab - INFO - TOTAL_OUTPUT_TOKENS: 0
2025-08-27 10:46:30,490 - innolab - INFO - TOTAL_TOKENS: 0
2025-08-27 10:46:30,490 - innolab - INFO - AVERAGE_SIMILARITY: 0.000
2025-08-27 10:46:30,490 - innolab - INFO - THRESHOLD_MET_COUNT: 0
2025-08-27 10:46:30,490 - innolab - INFO - SIMILARITY_THRESHOLD: 0.85
2025-08-27 10:46:30,490 - innolab - INFO - DETAILED_RESULTS:
2025-08-27 10:46:30,490 - innolab - INFO - FILE: owasp_insecure_demo.py | STATUS: FAILED | SIMILARITY: 0.000 | INPUT_TOKENS: 0 | OUTPUT_TOKENS: 0 | TOTAL_TOKENS: 0 | THRESHOLD_MET: False
2025-08-27 10:46:30,491 - innolab - INFO - AVERAGE_PROCESSING_TIME: 2.3
2025-08-27 10:46:30,491 - innolab - INFO - END_BATCH_RESULT
2025-08-27 10:46:30,491 - innolab - INFO - {"success": true, "fixed_count": 0, "failed_count": 1, "total_input_tokens": 0, "total_output_tokens": 0, "total_tokens": 0, "average_similarity": 0.0, "threshold_met_count": 0, "similarity_threshold": 0.85, "average_processing_time": 2.264062}
2025-08-27 10:46:32,651 - innolab - INFO - Batch fix completed successfully. Fixed 0 files
2025-08-27 10:46:32,652 - innolab - INFO - Token usage - Input: 0, Output: 0, Total: 0
2025-08-27 10:46:32,652 - innolab - INFO - Average similarity: 0.000, Threshold met: 0
2025-08-27 10:46:32,653 - innolab - INFO - Cleaned up temporary issues file: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App\list_real_bugs.json
2025-08-27 10:46:32,653 - innolab - INFO - Starting Bearer scan for project: my-service
2025-08-27 10:46:32,655 - innolab - INFO - Removed existing Bearer results file: c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-27 10:46:32,655 - innolab - INFO - Scanning directory: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:46:32,656 - innolab - ERROR - Command not found: bearer
2025-08-27 10:46:32,657 - innolab - INFO - Using Bearer Docker image
2025-08-27 10:46:32,657 - innolab - INFO - Running Bearer Docker scan: docker run --rm -v c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App:/scan -v c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results:/output bearer/bearer:latest scan /scan --format json --output /output/bearer_results_my-service.json --quiet --skip-path node_modules,*.git,__pycache__,.venv,venv,dist,build
2025-08-27 10:46:33,791 - innolab - INFO - Analyzing codebase
2025-08-27 10:46:41,532 - innolab - ERROR - Command failed with return code 1
2025-08-27 10:46:41,533 - innolab - INFO - Bearer Docker scan completed successfully
2025-08-27 10:46:41,534 - innolab - INFO - Reading Bearer scan results from: c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-27 10:46:41,534 - innolab - INFO - Bearer scan results loaded successfully
2025-08-27 10:46:41,535 - innolab - INFO - Found 5 Bearer security issues
2025-08-27 10:46:41,535 - innolab - INFO - Rescan found 5 open bugs (0 BUG, 0 CODE_SMELL)
2025-08-27 10:46:41,535 - innolab - INFO - Bugs reduced: 0 (from 5 to 5)
2025-08-27 10:46:41,535 - innolab - INFO - Iteration 1 completed: 5 bugs remain after rescan
2025-08-27 10:46:41,536 - innolab - INFO - 
=== ITERATION 2/5 ===
2025-08-27 10:46:41,536 - innolab - INFO - Starting Bearer scan for project: my-service
2025-08-27 10:46:41,538 - innolab - INFO - Removed existing Bearer results file: c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results\bearer_results_my-service.json
2025-08-27 10:46:41,538 - innolab - INFO - Scanning directory: c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App
2025-08-27 10:46:41,541 - innolab - ERROR - Command not found: bearer
2025-08-27 10:46:41,541 - innolab - INFO - Using Bearer Docker image
2025-08-27 10:46:41,542 - innolab - INFO - Running Bearer Docker scan: docker run --rm -v c:\Users\HieuLT\Desktop\InnoLab\projects\Flask_App:/scan -v c:\Users\HieuLT\Desktop\InnoLab\projects\SonarQ\bearer_results:/output bearer/bearer:latest scan /scan --format json --output /output/bearer_results_my-service.json --quiet --skip-path node_modules,*.git,__pycache__,.venv,venv,dist,build
2025-08-27 10:46:42,647 - innolab - INFO - Analyzing codebase
