app:
  description: ''
  icon: ðŸ¤–
  icon_background: '#FFEAD5'
  mode: workflow
  name: FixChain Analysis
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/gemini:0.2.4@1dc8cd4a3198584fd7639023951f388fff023caa234a4bdb8bba69d6091c2e64
kind: app
version: 0.4.0
workflow:
  conversation_variables: []
  environment_variables:
  - description: ''
    id: 2bf35ace-c0f4-4b9c-b27b-214a69930c0b
    name: base_url
    selector:
    - env
    - base_url
    value: http://192.168.160.1:8000/api/v1
    value_type: string
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInLoop: false
        sourceType: llm
        targetType: end
      id: 17546281768510-source-1755058276255-target
      selected: false
      source: '17546281768510'
      sourceHandle: source
      target: '1755058276255'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: start
        targetType: llm
      id: 1754385620848-source-17546281768510-target
      source: '1754385620848'
      sourceHandle: source
      target: '17546281768510'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: Start
        type: start
        variables:
        - label: report
          max_length: 9999999999
          options: []
          required: true
          type: paragraph
          variable: report
        - label: src
          max_length: 9999999999
          options: []
          required: false
          type: paragraph
          variable: src
        - default: '""'
          label: retrieved_context
          max_length: 9999999999
          options: []
          required: true
          type: paragraph
          variable: retrieved_context
      height: 141
      id: '1754385620848'
      position:
        x: 30
        y: 270.5
      positionAbsolute:
        x: 30
        y: 270.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            max_output_tokens: 3000
            temperature: 0.7
          mode: chat
          name: gemini-2.0-flash
          provider: langgenius/gemini/google
        prompt_template:
        - id: 00daa02b-8872-4d8d-88c2-45686fe01139
          role: system
          text: "Role\nYou are a Senior Software Engineer.\n\nTask\nRe-evaluate each\
            \ issue and decide whether it is a True Positive or a False Positive by\
            \ comparing the normalized type with the RAG context. Use only the provided\
            \ inputs. Do not propose any code changes.\n\nInputs\nCombined code base:\
            \ {{#1754385620848.src#}}\nBearer's scanned issues JSON: {{#1754385620848.report#}}\n\
            RAG retrieved context: {{#1754385620848.retrieved_context#}}\n\nType normalization\n\
            Convert all types (case-insensitive) into one of: {bug, code-smell}.\n\
            Accepted aliases: vuln, security, security-hotspot â†’ vulnerability.\n\n\
            Priority & decision logic\n- If RAG context exists â‡’ classification based\
            \ on RAG type.\n- If RAG context is empty or missing â‡’ analyze the issue\
            \ and classify as True Positive or False Positive.\n- If the issue type\
            \ is code-smell â‡’ action = \"Ignore\".\n- Otherwise â‡’ action = \"Fix\"\
            .\n\nOutput requirement: A JSON object with:\n{\n  \"bugs_to_fix\": <number>,\
            \   // total issues where action = Fix, if no action = Fix -> bugs_to_fix\
            \ = 0\n  \"bugs\": [                  // empty array if bugs_to_fix =\
            \ 0\n    {\n      \"bug_id\": <id or key>,\n      \"file_name\": <file\
            \ name>\n      \"rule\": <rule>,\n      \"description\": <message>,\n\
            \      \"classification\": \"True Positive\" | \"False Positive\",\n \
            \     \"action\": \"Fix\" | \"Ignore\",\n      \"reason\": \"<brief explanation\
            \ (â‰¤45 words); if RAG used include 'RAG: <id/title>'>\"\n    }\n  ]\n\
            }\n\nAdditional rules\n- Always sort bugs by bug_id in ascending order.\n\
            - Output only JSON according to the schema â€” no extra text.\n"
        selected: true
        structured_output:
          schema:
            additionalProperties: false
            properties:
              bugs:
                items:
                  additionalProperties: false
                  properties:
                    action:
                      type: string
                    bug_id:
                      type: string
                    classification:
                      type: string
                    file_name:
                      type: string
                    reason:
                      type: string
                    rule_description:
                      type: string
                    rule_key:
                      type: string
                  required:
                  - bug_id
                  - rule_key
                  - rule_description
                  - classification
                  - action
                  - reason
                  - file_name
                  type: object
                type: array
              bugs_to_fix:
                type: number
            required:
            - bugs_to_fix
            - bugs
            type: object
        structured_output_enabled: true
        title: 'Analysis Bugs '
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '17546281768510'
      position:
        x: 334
        y: 270.5
      positionAbsolute:
        x: 334
        y: 270.5
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '17546281768510'
          - structured_output
          value_type: object
          variable: list_bugs
        - value_selector:
          - '17546281768510'
          - text
          value_type: string
          variable: bugs_to_fix
        selected: false
        title: END ANALYSIS
        type: end
      height: 116
      id: '1755058276255'
      position:
        x: 638
        y: 270.5
      positionAbsolute:
        x: 638
        y: 270.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 161.59424650957692
      y: 116.52981177810354
      zoom: 0.7664884274995776
